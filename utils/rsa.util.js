"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var RsaUtil = (function () {
    function RsaUtil() {
    }
    RsaUtil.encrpt = function (text, publicKey) {
        var jsEncrypt = new JSEncrypt();
        jsEncrypt.setPublicKey(publicKey || this.publicKey);
        return jsEncrypt.encrypt(text);
    };
    RsaUtil.decrypt = function (text, privateKey) {
        var jsEncrypt = new JSEncrypt();
        jsEncrypt.setPrivateKey(privateKey || this.privateKey);
        return jsEncrypt.decrypt(text);
    };
    RsaUtil.publicKey = 'MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDlSfUJ3rvG6YpGOyQIfQe/FA+asDeHjhiMPohdvcDUNomMRuUuK5Jrl7FYoJZFN0QmiTs2' +
        'ZLQoQW8+YG5xLkFUJyBFuA6FctL9F8Soy1FgcoHXPAHok4npUco4uyt3f29OURTb14urjF6wdJT8YmKSZcDMWul/jrUWh5zS96MZowIDAQAB';
    RsaUtil.privateKey = 'MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGBAOVJ9Qneu8bpikY7JAh9B78UD5qwN4eOGIw' +
        '+iF29wNQ2iYxG5S4rkmuXsViglkU3RCaJOzZktChBbz5gbnEuQVQnIEW4DoVy0v0XxKjLUWBygdc8AeiTielRyji7K3d/b05RFNvXi6uMXrB0lPxiYpJlwMxa6X' +
        '+OtRaHnNL3oxmjAgMBAAECgYBjdIf4Rwe2SRi0S/TeRbV1eXMnSuZbQxR8yKcH2kXpBtr04M+KDlZNmxfO9KEZ1tYVzRLFDjti9rcVHGjraP' +
        '/meX4B3j3YvOj8sk6bEmI3GDhIRp5Na13nvCwJRDQJZYGgybEtM6VKCQ15KR4rV6h1m+LNdlH8w+yHo9nRmYy2YQJBAPRa+MkI4koIgEyeX4ueknLl' +
        '/mVfJShB0bwqvm4JQ04XTSMJt1rI59DRX6/1QijbC6jLe5KrdRjwabyo4/JhPnMCQQDwNy5d36JcK4Hsjqy7oT' +
        '+k7cQLqgMwrgQGFgN0COSY2BHKy0IgSaSmx9vFoSxV05f0HQba0RLBQkdnudNziTwRAkAH8v2s7JEP/37M/0n0bNAu1LSV76ZxzNJZ4LoZMkvyOmfT//jrByYjcOw' +
        '/+SaR1a5na1c1ykYg7ZFDBeuEcw1pAkEA5FYPpPvnAWX54jrcxp3IOaYpLE03Kxa+jGpwbePmJ8N7ZiE/giF+eWqQ5ZMG6a5wSoMs' +
        '+OKzyTCPX3GsJa7VgQJAf0wvVrLNCJyzCgIRr1nWbBSa7qezg8M4Z0+RgBGKKlz5YRlHx/JwPxjUgPVNVN0fD9d+PGRCrbWrkfjke+L4NA==';
    return RsaUtil;
}());
exports.RsaUtil = RsaUtil;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnNhLnV0aWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJyc2EudXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUtBO0lBQUE7SUF1Q0EsQ0FBQztJQWpCaUIsY0FBTSxHQUFwQixVQUFxQixJQUFZLEVBQUUsU0FBa0I7UUFDakQsSUFBTSxTQUFTLEdBQUcsSUFBSSxTQUFTLEVBQUUsQ0FBQztRQUNsQyxTQUFTLENBQUMsWUFBWSxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDcEQsT0FBTyxTQUFTLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFRYSxlQUFPLEdBQXJCLFVBQXNCLElBQVksRUFBRSxVQUFtQjtRQUNuRCxJQUFNLFNBQVMsR0FBRyxJQUFJLFNBQVMsRUFBRSxDQUFDO1FBQ2xDLFNBQVMsQ0FBQyxhQUFhLENBQUMsVUFBVSxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUN2RCxPQUFPLFNBQVMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQW5DYyxpQkFBUyxHQUFHLDhHQUE4RztRQUNySSw4R0FBOEcsQ0FBQztJQUdwRyxrQkFBVSxHQUFXLHFGQUFxRjtRQUNySCw2SEFBNkg7UUFDN0gsOEdBQThHO1FBQzlHLG9IQUFvSDtRQUNwSCx3RkFBd0Y7UUFDeEYsK0hBQStIO1FBQy9ILHVHQUF1RztRQUN2Ryw4R0FBOEcsQ0FBQztJQXlCdkgsY0FBQztDQUFBLEFBdkNELElBdUNDO0FBdkNZLDBCQUFPIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIHJzYeWKoOWvhuino+WvhlxyXG4gKi9cclxuZGVjbGFyZSB2YXIgSlNFbmNyeXB0OiBhbnk7XHJcblxyXG5leHBvcnQgY2xhc3MgUnNhVXRpbCB7XHJcblxyXG4gICAgLy8g5YWs6ZKlXHJcbiAgICBwcml2YXRlIHN0YXRpYyBwdWJsaWNLZXkgPSAnTUlHZk1BMEdDU3FHU0liM0RRRUJBUVVBQTRHTkFEQ0JpUUtCZ1FEbFNmVUozcnZHNllwR095UUlmUWUvRkErYXNEZUhqaGlNUG9oZHZjRFVOb21NUnVVdUs1SnJsN0ZZb0paRk4wUW1pVHMyJyArXHJcbiAgICAgICAgJ1pMUW9RVzgrWUc1eExrRlVKeUJGdUE2RmN0TDlGOFNveTFGZ2NvSFhQQUhvazRucFVjbzR1eXQzZjI5T1VSVGIxNHVyakY2d2RKVDhZbUtTWmNETVd1bC9qclVXaDV6Uzk2TVpvd0lEQVFBQic7XHJcblxyXG4gICAgLy8g56eB6ZKlXHJcbiAgICBwcml2YXRlIHN0YXRpYyBwcml2YXRlS2V5OiBzdHJpbmcgPSAnTUlJQ2RnSUJBREFOQmdrcWhraUc5dzBCQVFFRkFBU0NBbUF3Z2dKY0FnRUFBb0dCQU9WSjlRbmV1OGJwaWtZN0pBaDlCNzhVRDVxd040ZU9HSXcnICtcclxuICAgICAgICAnK2lGMjl3TlEyaVl4RzVTNHJrbXVYc1ZpZ2xrVTNSQ2FKT3paa3RDaEJiejVnYm5FdVFWUW5JRVc0RG9WeTB2MFh4S2pMVVdCeWdkYzhBZWlUaWVsUnlqaTdLM2QvYjA1UkZOdlhpNnVNWHJCMGxQeGlZcEpsd014YTZYJyArXHJcbiAgICAgICAgJytPdFJhSG5OTDNveG1qQWdNQkFBRUNnWUJqZElmNFJ3ZTJTUmkwUy9UZVJiVjFlWE1uU3VaYlF4Ujh5S2NIMmtYcEJ0cjA0TStLRGxaTm14Zk85S0VaMXRZVnpSTEZEanRpOXJjVkhHanJhUCcgK1xyXG4gICAgICAgICcvbWVYNEIzajNZdk9qOHNrNmJFbUkzR0RoSVJwNU5hMTNudkN3SlJEUUpaWUdneWJFdE02VktDUTE1S1I0clY2aDFtK0xOZGxIOHcreUhvOW5SbVl5MllRSkJBUFJhK01rSTRrb0lnRXllWDR1ZWtuTGwnICtcclxuICAgICAgICAnL21WZkpTaEIwYndxdm00SlEwNFhUU01KdDFySTU5RFJYNi8xUWlqYkM2akxlNUtyZFJqd2FieW80L0poUG5NQ1FRRHdOeTVkMzZKY0s0SHNqcXk3b1QnICtcclxuICAgICAgICAnK2s3Y1FMcWdNd3JnUUdGZ04wQ09TWTJCSEt5MElnU2FTbXg5dkZvU3hWMDVmMEhRYmEwUkxCUWtkbnVkTnppVHdSQWtBSDh2MnM3SkVQLzM3TS8wbjBiTkF1MUxTVjc2Wnh6TkpaNExvWk1rdnlPbWZULy9qckJ5WWpjT3cnICtcclxuICAgICAgICAnLytTYVIxYTVuYTFjMXlrWWc3WkZEQmV1RWN3MXBBa0VBNUZZUHBQdm5BV1g1NGpyY3hwM0lPYVlwTEUwM0t4YStqR3B3YmVQbUo4TjdaaUUvZ2lGK2VXcVE1Wk1HNmE1d1NvTXMnICtcclxuICAgICAgICAnK09LenlUQ1BYM0dzSmE3VmdRSkFmMHd2VnJMTkNKeXpDZ0lScjFuV2JCU2E3cWV6ZzhNNFowK1JnQkdLS2x6NVlSbEh4L0p3UHhqVWdQVk5WTjBmRDlkK1BHUkNyYldya2Zqa2UrTDROQT09JztcclxuXHJcbiAgICAvKipcclxuICAgICAqIOWFrOmSpeWKoOWvhlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSB0ZXh0IOWFrOmSpVxyXG4gICAgICogQHBhcmFtIHB1YmxpY0tleVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIGVuY3JwdCh0ZXh0OiBzdHJpbmcsIHB1YmxpY0tleT86IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICAgICAgY29uc3QganNFbmNyeXB0ID0gbmV3IEpTRW5jcnlwdCgpO1xyXG4gICAgICAgIGpzRW5jcnlwdC5zZXRQdWJsaWNLZXkocHVibGljS2V5IHx8IHRoaXMucHVibGljS2V5KTtcclxuICAgICAgICByZXR1cm4ganNFbmNyeXB0LmVuY3J5cHQodGV4dCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDnp4HpkqXop6Plr4ZcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gdGV4dCAg56eB6ZKlXHJcbiAgICAgKiBAcGFyYW0gcHJpdmF0ZUtleVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIGRlY3J5cHQodGV4dDogc3RyaW5nLCBwcml2YXRlS2V5Pzogc3RyaW5nKTogc3RyaW5nIHtcclxuICAgICAgICBjb25zdCBqc0VuY3J5cHQgPSBuZXcgSlNFbmNyeXB0KCk7XHJcbiAgICAgICAganNFbmNyeXB0LnNldFByaXZhdGVLZXkocHJpdmF0ZUtleSB8fCB0aGlzLnByaXZhdGVLZXkpO1xyXG4gICAgICAgIHJldHVybiBqc0VuY3J5cHQuZGVjcnlwdCh0ZXh0KTtcclxuICAgIH1cclxufVxyXG4iXX0=